// -------------------------------------------------------------
// 
// File Name: hdlsrc\edgeDetector\EdgeDetection.v
// Created: 2024-05-06 23:19:59
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 1
// Target subsystem base rate: 1
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        1
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// u                             ce_out        1
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: EdgeDetection
// Source Path: edgeDetector/EdgeDetection
// Hierarchy Level: 0
// Model version: 1.2
// 
// -------------------------------------------------------------


/*
This module connects all the other modules together

*/

module EdgeDetection
          (clk,
           reset,
           clk_enable,
           In_Arrary,
           ce_out,
           u);


  input   clk;
  input   reset;
  input   clk_enable;
  input   [7:0] In_Arrary;  // uint8
  output  ce_out;
  output  [7:0] u;  // double


  wire [7:0] smoothed;  // uint8
  wire [7:0] x;  // uint8
  wire [7:0] CompareToThreshold_out1;  // ufix64 // this needs to be changed


  Smoothing_Filter u_Smoothing_Filter (.clk(clk),
                                       .reset(reset),
                                       .enb(clk_enable),
                                       .In_Arrary(In_Arrary),  // uint8
                                       .SmoothedArray(smoothed)  // uint8
                                       );
  Derivative u_Derivative (.clk(clk),
                           .reset(reset),
                           .enb(clk_enable),
                           .In1(smoothed),  // uint8
                           .u(x)  // uint8
                           );
  CompareToThreshold u_CompareToThreshold (.In1(x),  // uint8
                                           .u(CompareToThreshold_out1)  // double
                                           );
  assign u = CompareToThreshold_out1;

  assign ce_out = clk_enable;

endmodule  // EdgeDetection

